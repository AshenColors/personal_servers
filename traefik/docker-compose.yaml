version: "3.9"

services:
  app:
    image: traefik:v2.4
    # Note below that we use host mode to avoid source nat being applied to our ingress HTTP/HTTPS sessions

    # Without host mode, all inbound sessions would have the source IP of the swarm nodes, rather than the

    # original source IP, which would impact logging. If you don't care about this, you can expose ports the

    # "minimal" way instead
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
      - target: 8080
        published: 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt_traefik:/acme
    configs:
      - source: app_config
        target: /etc/traefik/traefik.toml
    networks:
      - traefik_public

    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.docker.network=traefik_public"
        - "traefik.http.routers.api.rule=Host(`traefik.dev.test`)"
        - "traefik.http.routers.api.entrypoints=https"
        - "traefik.http.routers.api.tls.domains[0].main=dev.test"
        - "traefik.http.routers.api.tls.domains[0].sans=traefik.dev.test"
        - "traefik.http.routers.api.tls=true"
        - "traefik.http.routers.api.tls.certresolver=le"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.services.dummy.loadbalancer.server.port=9999"
        # uncomment this to enable forward authentication on the traefik api/dashboard
        #- "traefik.http.routers.api.middlewares=forward-auth"
      placement:
        constraints: [ node.role == manager ]

configs:
  app_config:
    file: ./traefik.toml

volumes:
  letsencrypt_traefik:

networks:
  traefik_public:
    external: true
